name: Build Android APK

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Install legacy Android SDK components
      run: |
        # Set up environment
        export ANDROID_HOME=/usr/local/lib/android/sdk
        export ANDROID_SDK_ROOT=/usr/local/lib/android/sdk
        export PATH=$PATH:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin
        
        # Try to install legacy components, but continue if they fail
        echo "Attempting to install Android API 23..."
        sdkmanager "platforms;android-23" || echo "Could not install API 23"
        sdkmanager "build-tools;23.0.0" || echo "Could not install build-tools 23.0.0" 
        
        # List what we have available
        echo "Available platforms:"
        sdkmanager --list_installed | grep platforms || true
        echo "Available build-tools:"
        sdkmanager --list_installed | grep build-tools || true

    - name: Make gradlew executable
      run: chmod +x ./gradlew

    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Try to build APKs
      env:
        ANDROID_HOME: /usr/local/lib/android/sdk
        ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
      run: |
        echo "Attempting to build with legacy configuration..."
        ./gradlew assembleDebug --stacktrace || echo "Debug build failed"
        ./gradlew assembleRelease --stacktrace || echo "Release build failed"
        
        # Check what was built
        echo "Checking for any APK files..."
        find . -name "*.apk" -type f || echo "No APK files found"

    - name: Upload any APK artifacts found
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: aiproute-apks
        path: |
          app/build/outputs/apk/**/*.apk
          **/*.apk
        retention-days: 30
        if-no-files-found: ignore

    - name: Build Summary
      if: always()
      run: |
        echo "Build completed. Check the artifacts tab for any APK files that were successfully built."
        echo "Note: This is a legacy Android project that may require specific SDK versions to build successfully."